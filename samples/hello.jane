interface IMoveable
{
    move( x : number, y : number ) : void;
}

abstract class Shape implements IMoveable
{
    x : number;
    y : number;
    static value : number;

    move( x : number, y : number ) : void
    {
        this.x += x;
        this.y += y;
    }

    abstract area() : number;
}

class Rectangle extends Shape
{
    w : number;
    h : number;

    area() : number { return this.w * this.h; }
}

class Triangle extends Shape
{
    b : number;
    h : number;

    area() : number
    {
        return (this.b * this.h) / 2;
    }
}
